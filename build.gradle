plugins {
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "com.github.spotbugs" version "4.7.1"
    id "com.github.node-gradle.node" version "1.5.3"
}

node {
    version = '10.14.1'
    npmVersion = '6.4.1'
    download = true
    workDir = file("${project.buildDir}/ui")
    nodeModulesDir = file("${project.rootDir}/ui")
}

npm_run_build {
    inputs.files fileTree("ui/src")
    inputs.file 'ui/package.json'
    inputs.file 'ui/package-lock.json'
    outputs.dir 'ui/build'
}

apply from: 'project-properties.gradle'
version '2.0.0'

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    all {
        resolutionStrategy {
            force("com.google.guava:guava:30.1-jre")
        }
    }
}

dependencies {
    implementation 'com.epam.reportportal:plugin-api:5.10.0'
    implementation 'com.epam.reportportal:agent-java-junit5:5.1.10'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    implementation 'org.apache.poi:poi:4.1.1'
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

    implementation 'org.seleniumhq.selenium:selenium-api:4.18.0'
    implementation 'com.epam.reportportal:logger-java-logback:5.1.6'

    testImplementation ('com.epam.healenium:healenium-web:3.5.1') {
        exclude group: 'com.codeborne', module: 'selenide'
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.2'
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    implementation 'com.github.docker-java:docker-java-api:3.3.6'

    annotationProcessor 'com.epam.reportportal:plugin-api:5.10.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.mockito:mockito-all:1.10.19'

    implementation 'org.apache.poi:poi:4.1.1'
}

test {
    useJUnitPlatform()
    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }
}

build.dependsOn jacocoTestReport

artifacts {
    archives shadowJar
}

sourceSets {
    main {
        resources
                {
                    exclude '**'
                }
    }
}

jar {
    from("src/main/resources") {
        into("/resources")
    }
    from("ui/build") {
        into("/resources")
    }
    manifest {
        attributes(
                "Class-Path": project.configurations.compile.collect { it.getName() }.join(' '),
                "Plugin-Id": "${pluginId}",
                "Plugin-Version": "${project.version}",
                "Plugin-Provider": "Healenium",
                "Plugin-Class": "com.epam.reportportal.extension.healenium.HealeniumPlugin",
                "Plugin-Service": "api"
        )
    }
}

shadowJar {
    from("src/main/resources") {
        into("/resources")
    }
    from("ui/build") {
        into("/resources")
    }
    configurations = [project.configurations.compile]
    zip64 true
    dependencies {
    }
}

task plugin(type: Jar) {
    getArchiveBaseName().set("plugin-${pluginId}")
    into('classes') {
        with jar
    }
    into('lib') {
        from configurations.compile
    }
    extension('zip')
}

task assemblePlugin(type: Copy) {
    from plugin
    into pluginsDir
}

task assemblePlugins(type: Copy) {
    dependsOn subprojects.assemblePlugin
}

compileJava.dependsOn npm_run_build
